--- 
- name: Ensuring CentOS distro
  fail:
    msg: 'This playbook requires CentOS distro.'
  when: not ansible_os_family=='RedHat'

- name: Loading CentOS variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Installing deployment dependencies
  yum: name={{ item }} state=present
  with_items:
    - '{{ helper_pkgs }}'

- name: Sync MySQL rpms to /tmp
  synchronize:
    src: rpms/ 
    dest: "{{ mysql_rpm_dir }}"

- name: Install MySQL rpms
  yum: name={{ mysql_rpm_dir }}/{{ item }} state=installed
  with_items: 
    - '{{ mysql_pkgs }}'

- name: Send root .my.cnf file
  template:
    src: .my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600

- name: Clean up /etc/my.cnf and /etc/my.cnf.d
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/my.cnf
    - /etc/my.cnf.d

- name: Send my.cnf file
  template: 
    src: my.cnf.{{ ansible_os_family }}.j2
    dest: /var/lib/mysql/my.cnf
    owner: mysql
    group: mysql
    mode: 0660

- name: Symlink /var/lib/mysql/my.cnf to /etc/my.cnf
  file:
    src: /var/lib/mysql/my.cnf
    owner: mysql
    group: mysql
    dest:  /etc/my.cnf
    state: link

- name: Start and enable MySQL server
  service:
    name: mysql
    state: started
    enabled: yes

- name: Check if /root/.mysql_secret exists
  stat:
    path: /root/.mysql_secret
  register: mysql_secret_file

- name: Retrieve /root/.mysql_secret password
  shell: cat /root/.mysql_secret  | awk '{print $NF}' | grep -v ^$
  register: mysql_default_password
  when: mysql_secret_file.stat.exists
 
- name: Change MySQL root password
  command: /usr/bin/mysqladmin -u root -p{{ mysql_default_password.stdout }} password {{ mysql_root_password }}
  when: mysql_secret_file.stat.exists

- name: Remove .mysql_secret password file
  file: 
    path: /root/.mysql_secret
    state: absent
  when: mysql_secret_file.stat.exists

- name: Update all root accounts
  mysql_user: 
    name: root
    host: "{{ item }}"
  with_items:
    - 127.0.0.1
    - localhost
    - ::1

- name: Delete anonymous users
  mysql_user: 
    user: ""
    state: absent

- name: Delete test database
  mysql_db: 
    db: test
    state: absent
